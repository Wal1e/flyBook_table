$theme-colors: (
  'default': var(--color-text-base),
  'secondary': var(--color-text-secondary),
  'tertiary': var(--color-text-tertiary),
  'placeholder': var(--color-text-placeholder),
  'primary': var(--color-primary),
  'success': var(--color-success),
  'error': var(--color-error),
  'warning': var(--color-warning),
  'black': var(--color-black),
  'white': var(--color-white)
);

// 颜色colors
@each $color, $value in $theme-colors {
  .text-#{$color} {
    color: $value !important;
  }
}

$theme-background-colors: (
  'base': var(--bg-color-base),
  'dark': var(--bg-color-dark),
  'darker': var(--bg-color-darker),
  'light': var(--bg-color-light),
  'lighter': var(--bg-color-lighter),
  'primary': var(--color-primary),
  'success': var(--color-success),
  'error': var(--color-error),
  'warning': var(--color-warning),
  'black': var(--color-black),
  'white': var(--color-white),
  'surface': var(--bg-color-surface),
);

// Background color
@each $color, $value in $theme-background-colors {
  .bg-#{$color} {
    background-color: $value !important;
  }
}

// border color
$theme-border-colors: (
  'primary': var(--color-primary),
  'success': var(--color-success),
  'error': var(--color-error),
  'warning': var(--color-warning),
  'black': var(--color-black),
  'white': var(--color-white)
);

$theme-border-colors2: (
  '': var(--border-color-base),
  'light': var(--border-color-light),
  'dark': var(--border-color-dark)
);

@each $color, $value in $theme-border-colors {
  .border-#{$color} {
    border: 1px solid $value !important;
  }
}

@each $color, $value in $theme-border-colors2 {
  $border: 1px solid $value !important;
  @if $color == '' {
    .border {
      border: $border;
    }
    .border-top {
      border-top: $border;
    }
    .border-bottom {
      border-bottom: $border;
    }
    .border-left {
      border-left: $border;
    }
    .border-right {
      border-right: $border;
    }
  } @else {
    .border-#{$color} {
      border: $border;
    }
    .border-top-#{$color} {
      border-top: $border;
    }
    .border-bottom-#{$color} {
      border-bottom: $border;
    }
    .border-left-#{$color} {
      border-left: $border;
    }
    .border-right-#{$color} {
      border-right: $border;
    }
  }
}

// Border-radius
$border-radius: 4px;

.rounded {
  border-radius: $border-radius !important;
}

.rounded-top {
  border-top-left-radius: $border-radius !important;
  border-top-right-radius: $border-radius !important;
}

.rounded-right {
  border-top-right-radius: $border-radius !important;
  border-bottom-right-radius: $border-radius !important;
}

.rounded-bottom {
  border-bottom-right-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-left {
  border-top-left-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-circle {
  border-radius: 50% !important;
}

.rounded-0 {
  border-radius: 0 !important;
}

//Display 属性
$displays: (
  'inline': inline,
  'inline-block': inline-block,
  'block': block,
  'none': none,
  'table': table,
  'table-cell': table-cell,
  'table-row': table-row,
  'flex': flex,
  'inline-flex': inline-flex
);

@each $spec, $value in $displays {
  .d-#{$spec} {
    display: $value !important;
  }
}

// flex属性

//flex-direction
.flex-row {
  flex-direction: row !important;
}

.flex-row-reverse {
  flex-direction: row-reverse !important;
}

.flex-column {
  flex-direction: column !important;
}

.flex-column-reverse {
  flex-direction: column-reverse !important;
}

// justify-content
.justify-content-start {
  justify-content: flex-start !important;
}

.justify-content-end {
  justify-content: flex-end !important;
}

.justify-content-center {
  justify-content: center !important;
}

.justify-content-between {
  justify-content: space-between !important;
}

.justify-content-around {
  justify-content: space-around !important;
}

// align-items
.align-items-start {
  align-items: start !important;
}

.align-items-end {
  align-items: end !important;
}

.align-items-center {
  align-items: center !important;
}

.align-items-baseline {
  align-items: baseline !important;
}

.align-items-stretch {
  align-items: stretch !important;
}

// align-self
.align-self-auto {
  align-self: auto !important;
}

.align-self-start {
  align-self: flex-start !important;
}

.align-self-end {
  align-self: flex-end !important;
}

.align-self-center {
  align-self: center !important;
}

.align-self-baseline {
  align-self: baseline !important;
}

.align-self-stretch {
  align-self: stretch !important;
}

// align-content
.align-content-start {
  align-content: flex-start !important;
}

.align-content-end {
  align-content: flex-end !important;
}

.align-content-center {
  align-content: center !important;
}

.align-content-between {
  align-content: space-between !important;
}

.align-content-around {
  align-content: space-around !important;
}

.align-content-stretch {
  align-content: stretch !important;
}

//flex-wrap
.flex-wrap {
  flex-wrap: wrap !important;
}

.flex-nowrap {
  flex-wrap: nowrap !important;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse !important;
}

// flex
.flex-1 {
  flex: 1 !important;
}
.flex-auto {
  flex: auto !important;
}
.flex-fill {
  flex: 1 1 auto !important;
}

.flex-grow-0 {
  flex-grow: 0 !important;
}

.flex-grow-1 {
  flex-grow: 1 !important;
}

.flex-shrink-0 {
  flex-shrink: 0 !important;
}

.flex-shrink-1 {
  flex-shrink: 1 !important;
}

// order属性
@for $i from 0 through 24 {
  .order-#{$i} {
    order: $i;
  }
}

.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flex-justify-center {
  display: flex;
  justify-content: center;
}

.flex-justify-between {
  display: flex;
  justify-content: space-between;
}

.flex-align-center {
  display: flex;
  align-items: center;
}

// 浮动float
.float-left {
  float: left !important;
}

.float-right {
  float: right !important;
}

.float-none {
  float: none !important;
}

//溢出overflow
.overflow-auto {
  overflow: auto !important;
}

.overflow-hidden {
  overflow: hidden !important;
}

.overflow-x-auto {
  overflow-x: auto !important;
}

.overflow-y-auto {
  overflow-y: auto !important;
}

//定位
$positions: (static, relative, absolute, fixed, sticky);

@each $position in $positions {
  .position-#{$position} {
    position: $position !important;
  }
}

.fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 999;
}

.fixed-bottom {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 999;
}

// 阴影

// .shadow-base {
//   box-shadow: $--box-shadow-base !important;
// }

// .shadow-light {
//   box-shadow: $--box-shadow-light !important;
// }

.shadow-none {
  box-shadow: none !important;
}

.w-10 {
  width: 10% !important;
}
.w-20 {
  width: 20% !important;
}
.w-30 {
  width: 30% !important;
}
.w-40 {
  width: 40% !important;
}
.w-50 {
  width: 50% !important;
}
.w-60 {
  width: 60% !important;
}
.w-70 {
  width: 70% !important;
}
.w-80 {
  width: 80% !important;
}
.w-90 {
  width: 90% !important;
}
.w-100 {
  width: 100% !important;
}

.h-10 {
  height: 10% !important;
}
.h-20 {
  height: 20% !important;
}
.h-30 {
  height: 30% !important;
}
.h-40 {
  height: 40% !important;
}
.h-50 {
  height: 50% !important;
}
.h-60 {
  height: 60% !important;
}
.h-70 {
  height: 70% !important;
}
.h-80 {
  height: 80% !important;
}
.h-90 {
  height: 90% !important;
}
.h-100 {
  height: 100% !important;
}
.w-auto {
  width: auto !important;
}

.mw-100 {
  max-width: 100% !important;
}

.mh-100 {
  max-height: 100% !important;
}

.min-vw-100 {
  min-width: 100vw !important;
}

.min-vh-100 {
  min-height: 100vh !important;
}

.vw-100 {
  width: 100vw !important;
}

.vh-100 {
  height: 100vh !important;
}

// 间隔 spacing
// pt-1, mt-1, p-1, m-1 等 0, 5, 10, 15, 20, 25
$directions: (
  't': 'top',
  'b': 'bottom',
  'l': 'left',
  'r': 'right'
);
$dimensions: (
  'p': 'padding',
  'm': 'margin'
);

//获取padding margin间隔
@each $dim in $dimensions {
  @for $i from 0 through 40 {
    $size: $i * 1;

    .#{nth($dim,1)}-#{$size} {
      #{nth($dim,2)}: #{$size}px !important;
    }
  }

  //循环四个方向
  @each $dir in $directions {
    @for $i from 0 through 60 {
      $size: $i * 1;

      .#{nth($dim,1)}#{nth($dir,1)}-#{$size} {
        #{nth($dim,2)}-#{nth($dir,2)}: #{$size}px !important;
      }
    }
  }
}

//y 垂直方向， x水平方向
// $directions2:(
//   'py',
//   'px',
//   'my',
//   'mx'
// );
@for $i from 0 through 60 {
  $size: $i * 1;
  .py-#{$size} {
    padding-top: #{$size}px !important;
    padding-bottom: #{$size}px !important;
  }

  .px-#{$size} {
    padding-left: #{$size}px !important;
    padding-right: #{$size}px !important;
  }

  .my-#{$size} {
    margin-top: #{$size}px !important;
    margin-bottom: #{$size}px !important;
  }

  .mx-#{$size} {
    margin-left: #{$size}px !important;
    margin-right: #{$size}px !important;
  }

  .lh-#{$size} {
    line-height: #{$size}px !important;
  }

  .fs-#{$size} {
    font-size: #{$size}px !important;
  }
}

// 文本
// Alignment
.text-left {
  text-align: left !important;
}

.text-right {
  text-align: right !important;
}

.text-center {
  text-align: center !important;
}

.text-justify {
  text-align: justify !important;
}

.text-wrap {
  white-space: normal !important;
}

.text-nowrap {
  white-space: nowrap !important;
}

.text-one-line {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
// Transformation

.text-lowercase {
  text-transform: lowercase !important; // 定义无大写字母，仅有小写字母。
}

.text-uppercase {
  text-transform: uppercase !important; // 定义仅有大写字母
}

.text-capitalize {
  text-transform: capitalize !important; // 文本中的每个单词以大写字母开头。
}

.font-weight-normal {
  font-weight: normal !important;
}

.font-weight-bold {
  font-weight: bold !important;
}

.font-weight-500 {
  font-weight: 500 !important;
}

.font-italic {
  font-style: italic !important; // 浏览器会显示一个斜体的字体样式
}

.text-decoration-none {
  text-decoration: none !important;
}

.text-break {
  word-break: break-word !important; // IE & < Edge 18
  overflow-wrap: break-word !important;
  white-space: pre-wrap;
}

.text-break-all {
  word-break: break-all;
}

// Reset
.text-reset {
  color: inherit !important;
}

// 垂直对齐Vertical

.align-baseline {
  vertical-align: baseline !important;
}

// Browser default
.align-top {
  vertical-align: top !important;
}

.align-middle {
  vertical-align: middle !important;
}

.align-bottom {
  vertical-align: bottom !important;
}

.align-text-bottom {
  vertical-align: text-bottom !important;
}

.align-text-top {
  vertical-align: text-top !important;
}

// 可见性 Visibility

.visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden !important;
}

.cursor-default {
  cursor: default !important;
}

.cursor-pointer {
  cursor: pointer !important;
}

.cursor-not-allowed {
  cursor: not-allowed !important;
}

.disabled {
  color: #bfbfbf !important;
  cursor: not-allowed !important;
}

// 第三方库公共样式
.react-resizable {
  position: relative;

  .react-resizable-handle {
    touch-action: none;
    position: absolute;
    width: 4px;
    height: 40px;
    right: -1.5px;
    top: 0;
    z-index: 2;
    cursor: none;
    opacity: 0;
    // &:hover {
    //   opacity: 1;
    //   width: 24px;
    //   right: -11.5px;
    //   background-image: url('@/assets/images/LeftRIght.png');
    //   background-repeat: no-repeat;
    //   background-position: 50%;
    //   &::after {
    //     opacity: 1;
    //     content: '';
    //     position: absolute;
    //     left: 50%;
    //     transform: translateX(-50%);
    //     width: 2px;
    //     height: 100vh;
    //     background: linear-gradient(180deg, rgba(73, 131, 245, 0.00) 0%, #4983F5 6.19%);
    //   }
    // }  
  }
}
.table-header-cell:last-child {
  .react-resizable-handle {
    width: 0px;
  }
}

.ps__rail-x {
  z-index: 10;
}